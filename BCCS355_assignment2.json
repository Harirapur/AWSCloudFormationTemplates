{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Template to lauch load balanced auto scaling group of EC2 and RDS instances with wordpress installed for Teamtasker Motorsport",
    "Parameters": {
        "EC2InstanceType": {
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": ["t2.micro", "m1.small"],
            "Description": "Instance type to use for the wordpress PHP servers."
        },
        "RDSInstanceType": {
            "Type": "String",
            "Default": "db.t2.micro",
            "AllowedValues": ["db.t2.micro", "db.m1.small"],
            "Description": "Instance type to use for the SQL servers."
        },
        "KeyName": {
            "Type": "String",
            "Description": "Enter the name of an existing key pair to use during the creation of resources"
        },
        "TargetVPCCIDR": {
            "Type": "String",
            "Description": "Enter the CIDR block the new VPC should use\nE.g.: 10.0.0.0/16"
        },
        "TargetVPCSubnet1CIDR": {
            "Type": "String",
            "Description": "Enter the CIDR block the new VPC should use\nE.g.: 10.0.0.0/24"
        },
        "TargetVPCSubnet2CIDR": {
            "Type": "String",
            "Description": "Enter the CIDR block the new VPC should use\nE.g.: 10.0.0.0/24"
        },
        "TargetVPCSubnet3CIDR": {
            "Type": "String",
            "Description": "Enter the CIDR block the new VPC should use\nE.g.: 10.0.0.0/24"
        },
    },
    "Resources": {
        "ProjectVPC": {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "CidrBlock" : {"Ref": "TargetVPCCIDR"},
                "EnableDnsSupport" : "true",
                "EnableDnsHostnames" : "true",
                "InstanceTenancy" : "default",
                "Tags" : []
            }
        },
        "VPCSubnet1": {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : { "Fn::Select" : [ 0, { "Fn::GetAZs" : "" } ] },
                "CidrBlock" : {"Ref": "TargetVPCSubnet1CIDR"},
                "MapPublicIpOnLaunch" : "true",
                "VpcId" : {"Ref": "ProjectVPC"}
            }
        },
        "VPCSubnet2": {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : { "Fn::Select" : [ 0, { "Fn::GetAZs" : "" } ] },
                "CidrBlock" : {"Ref": "TargetVPCSubnet2CIDR"},
                "MapPublicIpOnLaunch" : "true",
                "VpcId" : {"Ref": "ProjectVPC"}
            }
        },
        "VPCSubnet3": {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : { "Fn::Select" : [ 0, { "Fn::GetAZs" : "" } ] },
                "CidrBlock" : {"Ref": "TargetVPCSubnet3CIDR"},
                "MapPublicIpOnLaunch" : "true",
                "VpcId" : {"Ref": "ProjectVPC"}
            }
        },
        "InternetGateway" : {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
            }
        },
        "GatewayAttachment" : {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "VpcId" : { "Ref" : "ProjectVPC" },
                "InternetGatewayId" : { "Ref" : "InternetGateway" }
            }
        },
        "ProjectRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "DependsOn" : "InternetGateway",
            "Properties" : {
                "VpcId" : { "Ref" : "ProjectVPC" }
            }
        },
        "PublicRoute" : {
            "Type" : "AWS::EC2::Route",
            "DependsOn" : "InternetGateway",
            "Properties" : {
                "RouteTableId" : { "Ref" : "ProjectRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId" : { "Ref" : "InternetGateway" }
            }
        },
        "VPCSubnet0RouteTableEntry" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "VPCSubnet1" },
                "RouteTableId" : { "Ref" : "ProjectRouteTable" }
            }
        },
        "VPCSubnet1RouteTableEntry" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "VPCSubnet2" },
                "RouteTableId" : { "Ref" : "ProjectRouteTable" }
            }
        },
        "VPCSubnet2RouteTableEntry" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "VPCSubnet3" },
                "RouteTableId" : { "Ref" : "ProjectRouteTable" }
            }
        },
    }
}